.python_base:
  image: python:3.12-slim
  before_script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
  retry: 2

.docker_base:
  image: docker:dind
  before_script:
    - docker compose -f docker-compose-test.yaml up -d --build
  after_script:
    - docker compose -f docker-compose-test.yaml down
  retry: 2

variables:
  DOCKER_DRIVER: overlay2

stages:
  - lint
  - test
  - pre_commit
  - coverage
  - other_registry_build
  - build

lint:
  stage: lint
  extends: .python_base
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event"
      changes:
        paths:
          - "src/**/*"
        compare_to: "main"
  script:
    - poetry run flake8 src/

mypy:
  stage: lint
  extends: .python_base
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event"
      changes:
        paths:
          - "src/**/*"
        compare_to: "main"
  script:
    - poetry run mypy src/
  retry: 2

test:
  stage: test
  extends: .docker_base
  script:
    - docker compose -f docker-compose-test.yaml exec transaction_service pytest --cov --cov-fail-under=90 --cov-report term-missing
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event"

pre_commit:
  stage: pre_commit
  extends: .docker_base
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - docker compose -f docker-compose-test.yaml exec transaction_service flake8 src/
    - docker compose -f docker-compose-test.yaml exec transaction_service mypy src/
    - docker compose -f docker-compose-test.yaml exec transaction_service pytest --cov --cov-fail-under=90 --cov-report term-missing --cov-report xml:coverage.xml
    - docker cp $(docker compose -f docker-compose-test.yaml ps -q transaction_service):/app/coverage.xml ./coverage.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

coverage:
  stage: coverage
  extends: .docker_base
  script:
    - docker compose -f docker-compose-test.yaml exec transaction_service pytest --cov --cov-fail-under=90 --cov-report term-missing --cov-report xml:coverage.xml
    - docker cp $(docker compose -f docker-compose-test.yaml ps -q transaction_service):/app/coverage.xml ./coverage.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build_and_push_to_docker_hub:
  stage: build
  image: docker:latest
  services:
    - docker:latest
  before_script:
    - docker info
  script:
    - docker buildx create --use
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker buildx build --platform linux/amd64,linux/arm64 -t $DOCKERHUB_USERNAME/$IMAGE_NAME:latest --push .
  only:
    - main

other_registry_build:
  stage: other_registry_build
  before_script:
    - export DOCKER_CONFIG="$(mktemp -d)/"
    - echo -e $DOCKER_AUTH_CONFIG > $DOCKER_CONFIG/config.json
  script:
    - docker build -t ${CI_REGISTRY}/$IMAGE_NAME:latest .
    - docker push ${CI_REGISTRY}/$IMAGE_NAME:latest
  after_script:
    - rm -f $DOCKER_CONFIG
    - unset DOCKER_CONFIG
  tags:
    - shell
  allow_failure: true
